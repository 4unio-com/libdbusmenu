#!/usr/bin/env python

def main(args=sys.argv):
    usage = "%prog [OPTIONS]"
    parser = OptionParser(usage=usage)

    project_name = "ubuntu-desktop-tests"

    default_project = os.path.join("/usr/share", project_name)
    default_conffile = "$project/report.xsl"
    default_target = "~/.%s" % project_name
    default_log_level = "critical"

    parser.add_option("-l", "--log",
                      metavar="FILE",
                      help="The file to write the log to.")
    parser.add_option("--log-level",
                      default=default_log_level,
                      help="One of debug, info, warning, error or critical.")
    parser.add_option("-x", "--xslfile",
                      metavar="FILE",
                      dest="xsl_file",
                      default=default_xslfile,
                      help="XSL file for parsing LDTP logs.")
    parser.add_option("-p", "--project",
                      metavar="FILE",
                      default=default_project,
                      help="Project directory where applications are stored.")
    parser.add_option("-t", "--target",
                      metavar="FILE",
                      default=default_target,
                      help="Target directory where results are stored.")

    (options, args) = parser.parse_args(args[1:])

    # Set logging early
    log_level = logging.getLevelName(options.log_level.upper())
    log_handlers = []
    log_handlers.append(StreamHandler())
    if options.log:
        log_filename = options.log
        log_handlers.append(FileHandler(log_filename))

# xsltproc -o $REPORT_FILE $XSL_FILE $LOG_FILE

# firefox $REPORT_FILE &

    return 0

if __name__ == "__main__":
    sys.exit(main())
